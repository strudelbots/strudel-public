name: Client side run strudel-for-logs
# version: 0.20.02
on:
  workflow_dispatch:
    inputs:
      user_command:
        description: 'The user command'
        required: true

  # ***** By default the workflow runs every push on all branches besides the main branch
  push:
    branches:
      - "**"
      - '!main'       # chang this to your master branch name if it is not 'main'
jobs:
  should_run_strudel:
    runs-on: ubuntu-22.04
    outputs:
      run_strudel: ${{ steps.user_command.outputs.RUN_STRUDEL }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: check user command
        env:
          sha_last_commit: ${{ github.event.pull_request.head.sha }}
        id: user_command
        shell: bash
        run: |
          echo "Working branch:" ${{ github.ref }}
          user_command=${{ inputs.user_command }} 
          user_command=${user_command^^}
          last_commit=$(git log -1 --pretty=%B $sha_last_commit)
          last_commit=${last_commit^^}
          echo "last_commit: $last_commit"

          {
# *******  The following block is an example on how to use strudel cli
# *******  to trigger strudel based on the user command
# *******  Get the cli for linux ad mac:
# *******  https://github.com/strudelbots/strudel-public/blob/main/strudel_code/strudel_cli.sh
          if [[ $user_command == "ADD-LOGS" || $user_command == "REMOVE-LOGS" ]]; then
            user_command=${user_command,,}
            echo "Run strudel with command: $user_command"
            echo "RUN_STRUDEL=$user_command" >> $GITHUB_OUTPUT

# *******  The following block ios an example on how to
# *******  use the last commit message to determine the user command
# *******  uncomment the block if you want to trigger strudel based on the last commit message
#          elif [[ $last_commit == *"ADD-LOGS"* ]]; then
#              echo "Run strudel add logs"
#              echo "RUN_STRUDEL=add-logs" >> $GITHUB_OUTPUT
#          elif [[ $last_commit == *"REMOVE-LOGS"* ]]; then
#              echo "Run strudel remove logs"
#              echo "RUN_STRUDEL=remove-logs" >> $GITHUB_OUTPUT
#          else
#              echo "no commit message to match"
#              echo "RUN_STRUDEL=none" >> $GITHUB_OUTPUT
#          fi
          }

  run-strudel-for-logs:
    needs: [ should_run_strudel ]
    if: ${{ needs.should_run_strudel.outputs.run_strudel!='none' }}
    uses: strudelbots/strudel-public/.github/workflows/run_strudel_for_logs.yml@v0.20.02
    with:
# Make sure to change the name of your master branch if it is not main
      master_branch: main
      user_command: ${{ needs.should_run_strudel.outputs.run_strudel }}
    secrets:
      strudel_access_key: ${{ secrets.STRUDEL_ACCESS_KEY_ID }}
      strudel_secret_key: ${{ secrets.STRUDEL_SECRET_KEY }}

permissions:
  actions: write
  contents: write

