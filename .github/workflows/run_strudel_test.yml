name: run-strudel-test

on:
  workflow_call:
    inputs:
      logger_name:
        default: 'strudel'
        required: false
        type: string
        description: 'The name of the logger to use'
    secrets:
      strudel_access_key:
        required: true
      strudel_secret_key:
        required: true
  workflow_dispatch:
jobs:
  run-strudel-test:
    runs-on: ubuntu-22.04
    env:
      strudel_access_key: ${{ secrets.strudel_access_key }}
      strudel_secret_key: ${{ secrets.strudel_secret_key }}
    steps:
      - uses: actions/checkout@v4
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract branch name
        shell: bash
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: install python
        id: install-python
        uses: strudelbots/strudel-public/.github/actions/install-python@5-map-action-to-specific-strudel-image

      - name: extract strudel version
        id: extract-strudel-version
        uses: strudelbots/strudel-public/.github/actions/extract-strudel-version@main

      - name: print ref
        run: |
           echo "env ref=${{ env.ref }}"

      - name: get strudel-public files
        uses: strudelbots/strudel-public/.github/actions/get-public-files@5-map-action-to-specific-strudel-image

      - name: check user keys
        uses: strudelbots/strudel-public/.github/actions/check-user-keys@5-map-action-to-specific-strudel-image

      - name: login to ecr
        uses: strudelbots/strudel-public/.github/actions/login-to-ecr@5-map-action-to-specific-strudel-image

      - name: run docker compose
        run: |
            export LOGGER_NAME=${{ inputs.logger_name }}
            export REPOSITORY_ROOT=${{ github.workspace }}
            export HASHER_STORAGE_TYPE=s3
            export STRUDEL_USER_ACCESS_KEY_ID=${{ secrets.strudel_access_key }}
            export STRUDEL_USER_SECRET_KEY="${{ secrets.strudel_secret_key }}"
            #export STRUDEL_USER_SECRET_KEY=notValid
            docker compose -f /tmp/docker_compose_run.yml up  -d --quiet-pull
            sleep 10
            docker image list
            docker logs logs

#
#      - name: run strudel sanity test
#        run: |
#            echo "***   start sanity test"
#            export STATUSCODE=$(curl --silent --output /dev/null --write-out "%{http_code}" --location '127.0.0.1:8080/add_logs/' \
#            --header 'X-Request-Id: 7' \
#            --header 'Content-Type: application/json' \
#            --data '{"source": "test",
#            "file_content": "def foo():\n  print(a)",
#            "file_name": "test"}')
#            printf "\n***   status code is $STATUSCODE \n"
#            if [ $STATUSCODE -ne 200 ]; then echo "sanity test fails, status $STATUSCODE"; fi
#            if [ $STATUSCODE -ne 200 ]; then exit 22; fi
#            echo "***   end sanity test"
#
