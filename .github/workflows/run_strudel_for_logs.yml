name: run-strudel-on-branch

on:
  workflow_call:
    inputs:
      logger_name:
        default: 'strudel'
        required: false
        type: string
    secrets:
      strudel_access_key:
        required: true
      strudel_secret_key:
        required: true
#  push:
jobs:
  pre_run_strudel_on_pull_request:
    runs-on: ubuntu-22.04
    outputs:
      run_strudel: ${{ steps.check_head_commit_message.outputs.run_strudel_value }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: check head commit message
        id: check_head_commit_message
        env:
          sha_last_commit: ${{ github.event.pull_request.head.sha }}
        shell: bash
        run: |
          last_commit=$(git log -1 --pretty=%B $sha_last_commit)
          echo "last_commit:  $last_commit"
          curl -sSL https://raw.githubusercontent.com/strudelbots/strudel-public/refs/heads/main/code/determine_strudel_action.sh -o /tmp/tmp.sh
          chmod +x /tmp/tmp.sh
          command=$(/tmp/tmp.sh  "$last_commit")
          echo "command is $command"
          echo "run_strudel_value=$command" >> "$GITHUB_OUTPUT"

  run-strudel:
    needs: pre_run_strudel_on_pull_request
    if: ${{ needs.pre_run_strudel_on_pull_request.outputs.run_strudel!='none' }}
    env:
      strudel_access_key: ${{ secrets.strudel_access_key }}
      strudel_secret_key: ${{ secrets.strudel_secret_key }}
    permissions:
      actions: write
      contents: write

    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: |
          echo "start extract branch"
          export branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo "branch is $branch"
          echo "ref is ${{ github.action_ref }}
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          echo "end extract branch"


      - name: Clone the Strudel manager Repository
        run: |
          export current_dir=$(pwd)
          cd /tmp
          git clone https://github.com/strudel-ai/strudel-public.git
          cd strudel-public
          cat /tmp/strudel-public/release_map.json
          ls -alt
          cd $current_dir
      - name: Install python
        uses: actions/setup-python@v5
        with:
           python-version: '3.10.12'
      - name: Install requests
        run: pip install requests


      - name: "check is STRUDEL_ACCESS_KEY_ID exists"

        if: ${{ env.strudel_access_key == '' }}
        run: | 
          echo STRUDEL_ACCESS_KEY_ID is not defined!
          echo Please follow instruction in strudel-manual XXX
          exit 1
      - name: "check is STRUDEL_SECRET_KEY exists"
        if: ${{ env.strudel_secret_key == '' }}
        run: | 
          echo STRUDEL_SECRET_KEY is not defined!
          echo Please follow instruction in strudel-manual XXX
          exit 1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.strudel_access_key }}
          aws-secret-access-key: ${{ secrets.strudel_secret_key }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: run docker compose
        run: |
            export LOGGER_NAME=${{ inputs.logger_name }}
            docker compose -f /tmp/strudel-public/docker_compose_run.yml up  -d --quiet-pull
            sleep 10
            docker ps -a
      - name: run strudel sanity test
        run: |
            echo "start sanity test"
            export STATUSCODE=$(curl --silent --output /dev/stderr --write-out "%{http_code}" --location '127.0.0.1:8080/add_logs/' \
            --header 'X-Request-Id: 7' \
            --header 'Content-Type: application/json' \
            --data '{"source": "test",
            "file_content": "def foo():\n  print(a)",
            "file_name": "test"}')
            printf "\n\n****   status code is $STATUSCODE \n\n"
            if [ $STATUSCODE -ne 200 ]; then echo "sanity test fails, status $STATUSCODE"; fi
            if [ $STATUSCODE -ne 200 ]; then exit 22; fi
            echo "**** end sanity test"
            echo "**** end run strudel"

      - name: Get changed files
        id: get-changed-files
        uses: tj-actions/changed-files@v45
        with:
          since_last_remote_commit: false
      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.get-changed-files.outputs.all_changed_files }}
        run: |
          echo "all changed files: $ALL_CHANGED_FILES"

      - name: Run Strudel
        run: |
           export ALL_CHANGED_FILES="${{ steps.get-changed-files.outputs.all_changed_files }}"
           export ROOT_DIR=$(pwd)/
           export OVERWRITE_ORIG_FILES=True
           echo run_strudel ${{ needs.pre_run_strudel_on_pull_request.outputs.run_strudel }}
           python /tmp/strudel-public/github_run_strudel.py ${{ needs.pre_run_strudel_on_pull_request.outputs.run_strudel  }}
      - name: Commit and push Strudel logs
        run: |
          if [ -z "$(git status --porcelain)" ]; then echo "no files to push" && exit 0; fi
          git config --global user.name 'strudel-loger'
          git config --global user.email 'strudel-logger@users.noreply.github.com'
          git checkout ${{ steps.extract_branch.outputs.branch }}
          git commit -am "Automated strudel-logger commit for branch ${{ steps.extract_branch.outputs.branch }}"
          git push --set-upstream origin ${{ steps.extract_branch.outputs.branch }}
