name: 'Get Changed Files'
description: 'Get changed files'
inputs:
  master_branch:
    description: 'The name of the master branch'
    required: true
  excluded_directories:
    description: 'Comma seperated list of directory names'
    required: true

runs:

    using: 'composite'
    steps:
      - name: List changed files
        id: list-changed-files
        shell: bash
        run: |
          repository=$GITHUB_REPOSITORY
          echo "run strudel on branch"
          echo "repository=$repository"
          echo "master_branch=${{ inputs.master_branch }}"
          echo "current branch=${{ env.branch }}"
          excluded_directories="${{ inputs.excluded_directories }}"
          echo "excluded directories=$excluded_directories"
          master_branch=${{ inputs.master_branch }}
          git checkout $master_branch
          git checkout $branch
          out_file=${{ env.changed_files }}
          sleep 1
          source "$RUNNER_TEMP/functions_for_analyzing_git_db.sh"
          common_ancestor=$(last_common_commit "$master_branch" "$branch")
          echo "** The last common commit between '$master_branch' and '$branch': $common_ancestor"
          commits_after_common_commits=$(commits_after_common_commit $branch $common_ancestor)
          changed_files=()
          for hash in $commits_after_common_commits; do
            (is_commit_only_on_branch "$hash" "$branch")
            if [ $? -eq 0 ]; then
              commit_files=$(files_changed_in_commit "$hash")
              echo
              echo "Commit $hash has the following files:"
              printf "%s\n" "${commit_files[@]}"
              changed_files+=( $commit_files )
            fi
          done
          unique_files=$(args_to_space_separated_string "${changed_files[@]}")
          filtered_files=$(filter_files "$unique_files" "$excluded_directories")
          echo "Files that need to be merged from branch $branch:"
          echo "$unique_files"
          echo "Files that need to be analyzed by Strudel after filtering:"
          echo "$filtered_files" > $out_file
          cat $out_file
