name: 'Get public strudel files'
description: 'Get public strudel files from strudel-public repository'
runs:
    using: 'composite'
    steps:
      - name: get_public_files 1
        shell: bash
        env:
          version_tag: ${{ env.ref }}
        run: |
            echo "*** version_tag=$version_tag"
            file=docker_compose_run.yml
            {
              if [[ $version_tag == v0* ]]; then
                url="https://raw.githubusercontent.com/strudelbots/strudel-public/refs/tags/$version_tag/"            
              else
                url="https://raw.githubusercontent.com/strudelbots/strudel-public/refs/heads/$version_tag/"            
              fi
            } 
            echo "url=$url$file"
            wget -q -P $RUNNER_TEMP $url$file
            {
              wget_result=$?
              if [ $wget_result -ne 0 ]; then
                echo "Failed to get files from strudel-public with $wget_result"
                exit 1
              fi
            } 
            ls -alt $RUNNER_TEMP/$file
            
            file=github_run_strudel.py
            echo "url=$url$file"
            wget -q -P $RUNNER_TEMP $url$file
            {
              wget_result=$?
              if [ $wget_result -ne 0 ]; then
                echo "Failed to get files from strudel-public with $wget_result"
                exit 2
              fi
            } 
            ls -alt $RUNNER_TEMP/$file
            file=functions_for_analyzing_git_db.sh
            dir="strudel_code/"
            echo "url=$url$dir$file"
            wget -q -P $RUNNER_TEMP $url$dir$file
            {
              wget_result=$?
              if [ $wget_result -ne 0 ]; then
                echo "Failed to get files from strudel-public with $wget_result"
                exit 3
              fi
            }
            ls -alt $RUNNER_TEMP/$file

            # NOTE: MAIN BRANCH
            url="https://raw.githubusercontent.com/strudelbots/strudel-public/refs/heads/main/"
            file=strudel_code/release_to_image_map.json
            echo "url=$url$file"
            echo "removing $RUNNER_TEMP$file"
            rm -rf $RUNNER_TEMP$file
            wget -q -P $RUNNER_TEMP $url$file
            {
              wget_result=$?
              if [ $wget_result -ne 0 ]; then
                echo "Failed to get files from strudel-public with $wget_result"
                exit 4
              fi
            }
            ls -alt $RUNNER_TEMP/release_to_image_map.json
            #cat $RUNNER_TEMP/release_to_image_map.json
            file=strudel_code/get_image_for_tag.py
            echo "url=$url$file"
            wget -q -P $RUNNER_TEMP $url$file
            {
              wget_result=$?
              if [ $wget_result -ne 0 ]; then
                echo "Failed to get files from strudel-public with $wget_result"
                exit 5
              fi
            }
            ls -alt $RUNNER_TEMP/get_image_for_tag.py
            #cat $RUNNER_TEMP/get_image_for_tag.py
            file=strudel_code/image_map_data_classes.py
            echo "url=$url$file"
            wget -q -P $RUNNER_TEMP $url$file
            {
              wget_result=$?
              if [ $wget_result -ne 0 ]; then
                echo "Failed to get files from strudel-public with $wget_result"
                exit 6
              fi
            }
            ls -alt $RUNNER_TEMP/image_map_data_classes.py
            cd $RUNNER_TEMP
            mkdir -p strudel_code
            mv image_map_data_classes.py strudel_code
            ls -alt $RUNNER_TEMP/strudel_code

